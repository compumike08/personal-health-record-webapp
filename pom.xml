<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>mh.michael</groupId>
	<artifactId>personal_health_record_webapp</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>personal_health_record_webapp</name>

	<properties>
		<java.version>11</java.version>
		<jsonwebtoken.version>0.11.5</jsonwebtoken.version>
		<lombok.version>1.18.22</lombok.version>
		<frontend-maven-plugin.version>1.12.0</frontend-maven-plugin.version>
		<node.version>v20.16.0</node.version>
		<yarn.version>v1.22.22</yarn.version>
		<plugin.prettier.goal>write</plugin.prettier.goal>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jsonwebtoken.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jsonwebtoken.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jsonwebtoken.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>app/dist</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<configuration>
							<workingDirectory>app</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node</id>
								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<yarnVersion>${yarn.version}</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<execution>
								<id>yarn build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<arguments>build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.hubspot.maven.plugins</groupId>
				<artifactId>prettier-maven-plugin</artifactId>
				<!-- Find the latest version at https://github.com/jhipster/prettier-java/releases -->
				<version>0.22</version>
				<configuration>
					<prettierJavaVersion>2.6.7</prettierJavaVersion>
					<printWidth>90</printWidth>
					<tabWidth>2</tabWidth>
					<useTabs>false</useTabs>
					<ignoreConfigFile>true</ignoreConfigFile>
					<ignoreEditorConfig>true</ignoreEditorConfig>
					<!-- Use <inputGlobs> to override the default input patterns -->
					<inputGlobs>
						<!-- These are the default patterns, you can omit <inputGlobs> entirely unless you want to override them -->
						<inputGlob>src/main/java/**/*.java</inputGlob>
						<inputGlob>src/test/java/**/*.java</inputGlob>
					</inputGlobs>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>${plugin.prettier.goal}</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
